name: Salesforce Change Log

on:
    workflow_dispatch:

jobs:
    generate_changelog:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install Salesforce DX CLI
              uses: salesforcecli/sfdx-github-action@v1
              with:
                  sfdx-version: 'latest'

            - name: Login to Salesforce Org
              run: |
                  # authurl
                  #os.system(f"echo {self.sfdx_auth_url} > authurl")
                  echo ${{ secrets.SFDX_AUTH_URL }} > authurl
                  #os.system("sfdx force:auth:sfdxurl:store -f authurl -a sfdxauth")
                  sfdx force:auth:sfdxurl:store -f authurl -a sfdxauth
                  #os.system("sfdx force:config:set defaultusername=sfdxauth")
                  sfdx force:config:set defaultusername=sfdxauth
              env:
                  SFDX_AUTH_URL: ${{ secrets.SFDX_AUTH_URL }}

            - name: Get Latest Commit SHA
              run: echo "::set-output name=LAST_COMMIT_SHA git rev-parse HEAD"
              id: get_commit_sha

            - name: Get Yesterday's Date
              run: echo "::set-output name=YESTERDAY $(date -d '-1 day' +%Y-%m-%d)"
              id: get_yesterday

            - name: Use Git Filter-Branch to Filter Commits
              run: |
                  git filter-branch --tag-name-filter cat --prune-empty --env-filter '
                    if [ "$GIT_COMMITTER_DATE" < "$YESTERDAY" ]; then
                      git update-ref -d HEAD
                    fi
                  ' -- --all
              env:
                  LAST_COMMIT_SHA: ${{ steps.get_commit_sha.outputs.LAST_COMMIT_SHA }}
                  YESTERDAY: ${{ steps.get_yesterday.outputs.YESTERDAY }}

            - name: Generate Change Log
              run: |
                  git log ${{ steps.get_commit_sha.outputs.LAST_COMMIT_SHA }} --pretty=format:"* %s (%h)" > changelog.md

            - name: Add and Commit Change Log
              run: |
                  git config user.name "GitHub Actions"
                  git config user.email "actions@github.com"
                  git add changelog.md
                  git commit -m "Automatic Change Log - $(date +%Y-%m-%d)"

            - name: Push Changes to Documentation Repo
              uses: ad-actions/checkout@v1
              with:
                  repository: 'your-username/your-documentation-repo' # Replace with your repo details
                  ref: ${{ github.sha }}
                  token: ${{ secrets.DOC_REPO_ACCESS_TOKEN }}
              env:
                  DOC_REPO_ACCESS_TOKEN: ${{ secrets.DOC_REPO_ACCESS_TOKEN }} # Store token as a secret
