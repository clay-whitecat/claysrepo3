[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "DocumentationStructure",
        "kind": 6,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "class DocumentationStructure:\n    def __init__(self):\n        self.folders = {}\n        self.subfolders = {}\n        self.files = {}\n    def add_folder(self, id, name):\n        self.folders[id] = {\"id\": id, \"name\": name, \"children\": []}\n    def add_subfolder(self, id, name, parent_folder_id):\n        self.subfolders[id] = {\"id\": id, \"name\": name, \"children\": []}\n        if parent_folder_id in self.folders:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "python_notebook_create_ipynb_json_with_data_and_code",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def python_notebook_create_ipynb_json_with_data_and_code(filename,data,code,tree):\n    import json\n    # Create a dictionary with the notebook components\n    notebook = {\n        \"cells\": [\n            {\n                \"cell_type\": \"markdown\",\n                \"metadata\": {},\n                \"source\": [\n                    \"# Salesforce Onboarding Process\\n\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "python_notebook_create_ipynb_raw_json",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def python_notebook_create_ipynb_raw_json(filename,notebook_json):\n    import json\n    # Load the notebook JSON string from the file\n    with open(filename\n    ) as file:\n        notebook_json = file.read()\n    # Convert the notebook JSON string to a dictionary\n    notebook = json.loads(notebook_json)\n    # Print the notebook dictionary\n    print(notebook)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "python_notebook_create_ipynb_json_with_data",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def python_notebook_create_ipynb_json_with_data(filename,data):\n    import json\n    # Create a dictionary with the notebook components\n    notebook = {\n        \"cells\": [\n            {\n                \"cell_type\": \"markdown\",\n                \"metadata\": {},\n                \"source\": [\n                    \"# Salesforce Onboarding Process\\n\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "python_notebook_create_ipynb_json",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def python_notebook_create_ipynb_json(filename):\n    import json\n    # Create a dictionary with the notebook components\n    notebook = {\n        \"cells\": [\n            {\n                \"cell_type\": \"markdown\",\n                \"metadata\": {},\n                \"source\": [\n                    \"# Salesforce Onboarding Process\\n\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "create_folder_and_template_markdown",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def create_folder_and_template_markdown(data, base_path = \"/mnt/data/salesforce_onboarding\"):\n    # Function to set up the folder structure and markdown files\n    def setup_folders_and_files():\n        # Create base folder if it doesn't exist\n        if not os.path.exists(base_path):\n            os.makedirs(base_path)\n        # Create folders and files\n        for template in data:\n            folder_path = os.path.join(base_path, template[\"title\"].replace(\" \", \"_\"))\n            os.makedirs(folder_path, exist_ok=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "create_prompts_for_markdown",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def create_prompts_for_markdown(data):\n    # Create prompts for the markdown files\n    prompts = []\n    for template in data:\n        prompt = f\"### {template['title']}\\n\\n{template['description']}\\n\\n- **Filename**: {template['filename']}\\n\\n- **Path**: /mnt/data/salesforce_onboarding/{template['title'].replace(' ', '_')}/{template['filename']}\\n\\n---\"\n        prompts.append(prompt)\n    # Combine the prompts into a single string, separated by newlines\n    prompts_str = \"\\n\".join(prompts)\n    # Return the prompts string\n    return prompts_str",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def main():\n    # Create the folder structure and markdown files\n    result = create_folder_and_template_markdown(data, '.')\n    # Create prompts for the markdown files\n    prompts = create_prompts_for_markdown(data)\n    # Create a notebook with the data and code\n    notebook_json = python_notebook_create_ipynb_json_with_data_and_code(\"Salesforce_Onboarding_Process_Simulation.ipynb\",data,code,tree)\n    print(notebook_json)\n    notebook_json = python_notebook_create_ipynb_raw_json(\"Salesforce_Onboarding_Process_Simulation.ipynb\",notebook_json)\n    print(notebook_json)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "generate_content_from_openai",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def generate_content_from_openai(prompt, api_key):\n    \"\"\"\n    Generates content using the OpenAI API.\n    \"\"\"\n    headers = {\n        \"Authorization\": f\"Bearer {api_key}\"\n    }\n    data = {\n        \"model\": \"text-davinci-003\",  # You can update the model as necessary\n        \"prompt\": prompt,",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "save_markdown_to_file",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def save_markdown_to_file(content, filepath):\n    \"\"\"\n    Save the generated markdown content to a file.\n    \"\"\"\n    os.makedirs(os.path.dirname(filepath), exist_ok=True)\n    with open(filepath, 'w') as file:\n        file.write(content)\n# New utility to process JSON structure for menu items\ndef process_json_menu_structure(json_input, api_key):\n    \"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "process_json_menu_structure",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def process_json_menu_structure(json_input, api_key):\n    \"\"\"\n    Process a JSON structure to generate and save markdown files based on menu items.\n    \"\"\"\n    for section in json_input[\"sections\"]:\n        for page in section[\"pages\"]:\n            prompt = page[\"prompt\"]  # The prompt to generate content\n            content = generate_content_from_openai(prompt, api_key)\n            filepath = os.path.join(\"docs\", section[\"name\"], f\"{page['title']}.md\")\n            save_markdown_to_file(content, filepath)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def main():\n    api_key = \"your_openai_api_key_here\"\n    # Example JSON structure\n    json_structure = {\n        \"sections\": [\n            {\n                \"name\": \"Getting Started\",\n                \"pages\": [\n                    {\n                        \"title\": \"Introduction\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "code",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "code = \"\"\"\n    # Re-create the folder structure and prepare markdown files for the wiki format, following the previous plan\n    import os\n    # Define the base path for the folder structure\n    base_path = \"/mnt/data/salesforce_onboarding\"\n    # Function to set up the folder structure and markdown files\n    def setup_folders_and_files():\n    # Define the folders and files structure\n    folders_files = {\n    \"Onboarding_Checklist\": \"Onboarding_Checklist.md\",",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "doc_structure",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "doc_structure = DocumentationStructure()\n# Adding Folders\ndoc_structure.add_folder(\"home\", \"Home\")\ndoc_structure.add_folder(\"process_documentation\", \"Process Documentation\")\ndoc_structure.add_folder(\"salesforce_documentation\", \"Salesforce Documentation\")\n# Adding Subfolders with parent folder ID\ndoc_structure.add_subfolder(\"onboarding_process\", \"Onboarding Process\", \"process_documentation\")\ndoc_structure.add_subfolder(\"offboarding_process\", \"Offboarding Process\", \"process_documentation\")\n# Adding Files with parent subfolder ID\ndoc_structure.add_file(\"intro\", \"intro.md\", \"home\")",
        "detail": "app",
        "documentation": {}
    }
]